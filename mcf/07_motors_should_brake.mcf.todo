% Requirement 7
% The motors should brake if brake is being pressed as long as the battery is not full and the car is on

% Requirement 7a
nu X (vcs:Bool = false, speed:sDirection = Static, bp:Bool = false, bat:Bool = false). (
	[c_VCS(On)] X(true, speed, bp, bat) &&
	[c_VCS(Off)] X(false, speed, bp, bat) &&

	forall dspeed:sDirection . forall cc:sCCThreshold . forall t:sTurnOffThreshold . [aSpeed(cc, t, dspeed)] X(vcs, dspeed, bp, bat) &&

	[aBrakePedal(Pressed)] X(vcs, speed, true, bat) &&
	[aBrakePedal(Released)] X(vcs, speed, false, bat) &&
	
	[aBattery(Full)] X(vcs, speed, bp, false) &&
	[aBattery(Safe) || aBattery(Unsafe)] X(vcs, speed, bp, true) &&

	[!(
	exists dvcs: sVirtualCarState . c_VCS(dvcs) || 
	exists dspeed:sDirection . exists cc:sCCThreshold . exists t:sTurnOffThreshold . aSpeed(cc, t, dspeed) ||
	exists dbp:sPedalState . aBrakePedal(dbp) || 
	exists dbat:sBatteryState . aBattery(dbat)
	)] X(vcs, speed, bp, bat) && 

	(val(vcs && bp && bat))	=> 
	(
		nu Y.(
			[!aMotorForce(opposite(speed))]Y && <true>true
		)
	)
)