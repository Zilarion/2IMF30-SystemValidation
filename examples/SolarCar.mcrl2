sort 
	sPedalState = struct Pressed | Released;
	sDNRPState = struct D | R | NP;
	sCarState = struct On | Off;
	sBatteryState struct Unsafe | Safe | Full;
	sCCThreshold = struct BelowCCmin | AboveCCmin;
	sTurnOffThreshold = struct BelowTurnOffMax | AboveTurnOffMax;
	sDirection = struct Forwards | Backwards | Static;
	sCCState = struct Set | Reset;
	sVirtualCarState = struct On | Off | CC;
     
act
  ins10, ins20, acc10, acc20, coin10, coin20, ret10, ret20 ;
  optA, optC, chg10, chg20, putA, putC, prod, 
  readyA, readyC, out10, out20 ;

proc
  User = 
    ins10.(optA + ins10.optC + chg10 + ins10.chg20).User + 
    ins20.(optC + chg20 + optA.chg10).User ;

  Mach = 
    acc10.( putA.prod + acc10.( putC.prod + ret20 ) + ret10 ).Mach +
    acc20.( putA.prod.ret10 + putC.prod + ret20 ).Mach ;

init
  allow(
    { readyA, readyC, coin10, coin20, out10, out20, prod },
    comm(
      { ins20|acc20 -> coin20, 
        ins10|acc10 -> coin10,
        optA|putA -> readyA,
        optC|putC -> readyC,
        chg10|ret10 -> out10,
        chg20|ret20 -> out20
      },
      User || Mach
  ) ) ;
